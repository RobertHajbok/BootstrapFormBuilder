// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static BootstrapFormBuilder.Controllers.FormBuilderController FormBuilder = new BootstrapFormBuilder.Controllers.T4MVC_FormBuilderController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            public const string UrlPath = "~/Scripts/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string app_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app.min.js") ? Url("app.min.js") : Url("app.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class collections {
                public const string UrlPath = "~/Scripts/app/collections";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string my_form_snippets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/my-form-snippets.min.js") ? Url("my-form-snippets.min.js") : Url("my-form-snippets.js");
                public static readonly string snippets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/snippets.min.js") ? Url("snippets.min.js") : Url("snippets.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class data {
                public const string UrlPath = "~/Scripts/app/data";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string button_json = Url("button.json");
                public static readonly string input_json = Url("input.json");
                public static readonly string radio_json = Url("radio.json");
                public static readonly string select_json = Url("select.json");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lib {
                public const string UrlPath = "~/Scripts/app/lib";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string class_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/class.min.js") ? Url("class.min.js") : Url("class.js");
                public static readonly string stub_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/stub.min.js") ? Url("stub.min.js") : Url("stub.js");
            }
        
            public static readonly string main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/main.min.js") ? Url("main.min.js") : Url("main.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class models {
                public const string UrlPath = "~/Scripts/app/models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string snippets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/snippets.min.js") ? Url("snippets.min.js") : Url("snippets.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class templates {
                public const string UrlPath = "~/Scripts/app/templates";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class app {
                    public const string UrlPath = "~/Scripts/app/templates/app";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string render_html = Url("render.html");
                    public static readonly string renderform_html = Url("renderform.html");
                    public static readonly string tab_nav_html = Url("tab-nav.html");
                    public static readonly string temp_html = Url("temp.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class popover {
                    public const string UrlPath = "~/Scripts/app/templates/popover";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string popover_checkbox_html = Url("popover-checkbox.html");
                    public static readonly string popover_input_html = Url("popover-input.html");
                    public static readonly string popover_main_html = Url("popover-main.html");
                    public static readonly string popover_select_html = Url("popover-select.html");
                    public static readonly string popover_textarea_split_html = Url("popover-textarea-split.html");
                    public static readonly string popover_textarea_html = Url("popover-textarea.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class snippet {
                    public const string UrlPath = "~/Scripts/app/templates/snippet";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string appendedcheckbox_html = Url("appendedcheckbox.html");
                    public static readonly string appendedtext_html = Url("appendedtext.html");
                    public static readonly string button_html = Url("button.html");
                    public static readonly string buttondouble_html = Url("buttondouble.html");
                    public static readonly string buttondropdown_html = Url("buttondropdown.html");
                    public static readonly string filebutton_html = Url("filebutton.html");
                    public static readonly string formname_html = Url("formname.html");
                    public static readonly string multiplecheckboxes_html = Url("multiplecheckboxes.html");
                    public static readonly string multiplecheckboxesinline_html = Url("multiplecheckboxesinline.html");
                    public static readonly string multipleradios_html = Url("multipleradios.html");
                    public static readonly string multipleradiosinline_html = Url("multipleradiosinline.html");
                    public static readonly string passwordinput_html = Url("passwordinput.html");
                    public static readonly string prependedcheckbox_html = Url("prependedcheckbox.html");
                    public static readonly string prependedtext_html = Url("prependedtext.html");
                    public static readonly string searchinput_html = Url("searchinput.html");
                    public static readonly string selectbasic_html = Url("selectbasic.html");
                    public static readonly string selectmultiple_html = Url("selectmultiple.html");
                    public static readonly string snippet_templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/snippet-templates.min.js") ? Url("snippet-templates.min.js") : Url("snippet-templates.js");
                    public static readonly string textarea_html = Url("textarea.html");
                    public static readonly string textinput_html = Url("textinput.html");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class views {
                public const string UrlPath = "~/Scripts/app/views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string my_form_snippet_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/my-form-snippet.min.js") ? Url("my-form-snippet.min.js") : Url("my-form-snippet.js");
                public static readonly string my_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/my-form.min.js") ? Url("my-form.min.js") : Url("my-form.js");
                public static readonly string snippet_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/snippet.min.js") ? Url("snippet.min.js") : Url("snippet.js");
                public static readonly string tab_snippet_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tab-snippet.min.js") ? Url("tab-snippet.min.js") : Url("tab-snippet.js");
                public static readonly string tab_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tab.min.js") ? Url("tab.min.js") : Url("tab.js");
                public static readonly string temp_snippet_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/temp-snippet.min.js") ? Url("temp-snippet.min.js") : Url("temp-snippet.js");
            }
        
        }
    
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string jquery_3_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.intellisense.min.js") ? Url("jquery-3.1.1.intellisense.min.js") : Url("jquery-3.1.1.intellisense.js");
        public static readonly string jquery_3_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.min.js") ? Url("jquery-3.1.1.min.js") : Url("jquery-3.1.1.js");
        public static readonly string jquery_3_1_1_min_js = Url("jquery-3.1.1.min.js");
        public static readonly string jquery_3_1_1_min_map = Url("jquery-3.1.1.min.map");
        public static readonly string jquery_3_1_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.slim.min.js") ? Url("jquery-3.1.1.slim.min.js") : Url("jquery-3.1.1.slim.js");
        public static readonly string jquery_3_1_1_slim_min_js = Url("jquery-3.1.1.slim.min.js");
        public static readonly string jquery_3_1_1_slim_min_map = Url("jquery-3.1.1.slim.min.map");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string mustache_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mustache.min.js") ? Url("mustache.min.js") : Url("mustache.js");
        public static readonly string r_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/r.min.js") ? Url("r.min.js") : Url("r.js");
        public static readonly string require_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/require.min.js") ? Url("require.min.js") : Url("require.js");
        public static readonly string text_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/text.min.js") ? Url("text.min.js") : Url("text.js");
        public static readonly string underscore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/underscore.min.js") ? Url("underscore.min.js") : Url("underscore.js");
        public static readonly string underscore_min_js = Url("underscore.min.js");
        public static readonly string underscore_min_map = Url("underscore.min.map");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class app 
            {
                public static partial class collections 
                {
                    public static class Assets
                    {
                        public const string my_form_snippets_js = "~/Scripts/app/collections/my-form-snippets.js"; 
                        public const string snippets_js = "~/Scripts/app/collections/snippets.js"; 
                    }
                }
                public static partial class data 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class lib 
                {
                    public static class Assets
                    {
                        public const string class_js = "~/Scripts/app/lib/class.js"; 
                        public const string stub_js = "~/Scripts/app/lib/stub.js"; 
                    }
                }
                public static partial class models 
                {
                    public static class Assets
                    {
                        public const string snippets_js = "~/Scripts/app/models/snippets.js"; 
                    }
                }
                public static partial class templates 
                {
                    public static partial class app 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class popover 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class snippet 
                    {
                        public static class Assets
                        {
                            public const string snippet_templates_js = "~/Scripts/app/templates/snippet/snippet-templates.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class views 
                {
                    public static class Assets
                    {
                        public const string my_form_snippet_js = "~/Scripts/app/views/my-form-snippet.js"; 
                        public const string my_form_js = "~/Scripts/app/views/my-form.js"; 
                        public const string snippet_js = "~/Scripts/app/views/snippet.js"; 
                        public const string tab_snippet_js = "~/Scripts/app/views/tab-snippet.js"; 
                        public const string tab_js = "~/Scripts/app/views/tab.js"; 
                        public const string temp_snippet_js = "~/Scripts/app/views/temp-snippet.js"; 
                    }
                }
                public static class Assets
                {
                    public const string app_js = "~/Scripts/app/app.js"; 
                    public const string main_js = "~/Scripts/app/main.js"; 
                }
            }
            public static class Assets
            {
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string jquery_3_1_1_intellisense_js = "~/Scripts/jquery-3.1.1.intellisense.js"; 
                public const string jquery_3_1_1_js = "~/Scripts/jquery-3.1.1.js"; 
                public const string jquery_3_1_1_min_js = "~/Scripts/jquery-3.1.1.min.js"; 
                public const string jquery_3_1_1_slim_js = "~/Scripts/jquery-3.1.1.slim.js"; 
                public const string jquery_3_1_1_slim_min_js = "~/Scripts/jquery-3.1.1.slim.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string mustache_js = "~/Scripts/mustache.js"; 
                public const string r_js = "~/Scripts/r.js"; 
                public const string require_js = "~/Scripts/require.js"; 
                public const string text_js = "~/Scripts/text.js"; 
                public const string underscore_js = "~/Scripts/underscore.js"; 
                public const string underscore_min_js = "~/Scripts/underscore.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static class Assets
            {
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string Site_css = "~/Content/Site.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


